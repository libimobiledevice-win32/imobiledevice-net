<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <Description>.NET bindings for libimobiledevice, allows you to interact with devices running iOS, such as iPhones or iPads, using C# or VB.NET code</Description>
    <AssemblyTitle>.NET client for iOS devices (libimobiledevice-net)</AssemblyTitle>
    <VersionPrefix>1.2.1</VersionPrefix>
    <Authors>Quamotion</Authors>
    <TargetFrameworks Condition="'$(OS)' == 'Windows_NT'">netcoreapp2.0;net45</TargetFrameworks>
    <TargetFramework Condition="'$(OS)' != 'Windows_NT'">netcoreapp2.0</TargetFramework>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <AssemblyName>iMobileDevice-net</AssemblyName>
    <AssemblyOriginatorKeyFile>iMobileDevice.snk</AssemblyOriginatorKeyFile>
    <SignAssembly>true</SignAssembly>
    <PackageId>iMobileDevice-net</PackageId>
    <PackageTags>libimobiledevice;ios;iphone;ipad;imobiledevice;netcore</PackageTags>
    <PackageLicenseUrl>https://raw.githubusercontent.com/libimobiledevice-win32/imobiledevice-net/blob/master/LICENSE.txt</PackageLicenseUrl>
    <RepositoryType>git</RepositoryType>
    <PackageProjectUrl>http://github.com/libimobiledevice-win32/imobiledevice-net</PackageProjectUrl>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="NerdBank.GitVersioning" Version="2.1.65" PrivateAssets="all" />
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0-beta-63127-02" PrivateAssets="All" />
  </ItemGroup>
  
  <ItemGroup>
    <!-- win-x64 files which come from VcPkg packages-->
    <Content Include="$(VCPKG_ROOT)/installed/x64-windows/bin/*.dll">
      <PackagePath>runtimes/win-x64/native/%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="$(VCPKG_ROOT)/installed/x64-windows/tools/libideviceactivation/*.exe">
      <PackagePath>runtimes/win-x64/native/%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="$(VCPKG_ROOT)/installed/x64-windows/tools/libimobiledevice/*.exe">
      <PackagePath>runtimes/win-x64/native/%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="$(VCPKG_ROOT)/installed/x64-windows/tools/libplist/*.exe">
      <PackagePath>runtimes/win-x64/native/%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="$(VCPKG_ROOT)/installed/x64-windows/tools/libusbmuxd/*.exe">
      <PackagePath>runtimes/win-x64/native/%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
    </Content>

    <!-- win-x86 files which come from NuGet packages-->
    <Content Include="$(VCPKG_ROOT)/installed/x86-windows/bin/*.dll">
      <PackagePath>runtimes/win-x86/native/%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="$(VCPKG_ROOT)/installed/x86-windows/tools/libideviceactivation/*.exe">
      <PackagePath>runtimes/win-x86/native/%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="$(VCPKG_ROOT)/installed/x86-windows/tools/libimobiledevice/*.exe">
      <PackagePath>runtimes/win-x86/native/%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="$(VCPKG_ROOT)/installed/x86-windows/tools/libplist/*.exe">
      <PackagePath>runtimes/win-x86/native/%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="$(VCPKG_ROOT)/installed/x86-windows/tools/libusbmuxd/*.exe">
      <PackagePath>runtimes/win-x86/native/%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
    </Content>
    
    <!-- For Ubuntu Linux, we now recommend you use our PPA feed
         https://launchpad.net/~quamotion/+archive/ubuntu/ppa;
         but we keep the Ubuntu 16.04 archives for backward compatibility
         purposes. Starting with 18.04, you really need to use the PPAs, though :) -->
    <Content Include="$(MSBuildThisFileDirectory)/../ext/linux-x64/lib/*.so">
      <PackagePath>runtimes/ubuntu.16.04-x64/native/%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="$(MSBuildThisFileDirectory)/../ext/linux-x64/bin/*">
      <PackagePath>runtimes/ubuntu.16.04-x64/native/</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="$(MSBuildThisFileDirectory)/../ext/linux-x64/sbin/*">
      <PackagePath>runtimes/ubuntu.16.04-x64/native/</PackagePath>
      <Pack>true</Pack>
    </Content>

    <!-- macOS files come from the tarballs -->
    <Content Include="$(MSBuildThisFileDirectory)/../ext/osx-x64/lib/*.dylib">
      <PackagePath>runtimes/osx-x64/native/%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="$(MSBuildThisFileDirectory)/../ext/osx-x64/bin/*">
      <PackagePath>runtimes/osx-x64/native/</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="$(MSBuildThisFileDirectory)/../ext/osx-x64/sbin/*">
      <PackagePath>runtimes/osx-x64/native/</PackagePath>
      <Pack>true</Pack>
    </Content>
    
    <!-- Pack the files are included in the current project dir-->
    <Content Include="runtimes/win-x64/native/*.*">
      <PackagePath>runtimes/win-x64/native/%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="runtimes/win-x86/native/*.*">
      <PackagePath>runtimes/win-x86/native/%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="runtimes/osx-x64/native/*.*">
      <PackagePath>runtimes/osx-x64/native/%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
    </Content>
    <Content Include="runtimes/debian-x64/native/*.*">
      <PackagePath>runtimes/ubuntu.16.04-x64/native/%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
    </Content>

    <!-- Build files -->
    <Content Include="build/net45/*.*">
      <PackagePath>build/net45/%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
    </Content>
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net45' ">
    <Reference Include="System" />
    <Reference Include="Microsoft.CSharp" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Properties\" />
  </ItemGroup>

</Project>
